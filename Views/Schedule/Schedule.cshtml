@model dotnetcore_desktop_app.ViewModels.ScheduleViewModel

@{
    int column_coumt;
    int date_count;
    int emp_count;
    if (Model != null)
    {
        column_coumt = Model.dates.Count + 1;
        date_count = Model.dates.Count;
        emp_count = Model.schedules.Count;
    }
    else
    {
        column_coumt = 31;
        date_count = 30;
        emp_count = 23;
    }
}
<head>
    <style>
        .container_schedule {
            display: grid;
            grid-template-columns: repeat(@column_coumt, 55px);
            grid-template-rows: repeat(23, 55px);
        }

        .box {
            width: 45px;
            height: 45px;
            background-color: lightblue;
            transition: background-color 0.3s;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 16px;
            cursor: pointer;
        }

        .box_first_column {
            width: 50px;
            height: 45px;
            background-color: cadetblue;
            font-weight: bold;
        }

        .box_first_row {
            width: 45px;
            height: 45px;
            background-color: cadetblue;
            font-weight: bold;
        }

        .box:hover {
            background-color: lightgreen;
        }

        .highlight-row {
            background-color: yellow;
        }

        .highlight-column {
            background-color: orange;
        }

    </style>
</head>
<form method="post" action="~/Schedule/Schedule">
    <div>
        <input id="userId" name="userId" type="text" placeholder="職工編號" />
        <input id="userPassword" name="userPassword" type="password" placeholder="密碼" />
        <input id="month_shift" name="month_shift" placeholder="月偏移=-2,-1,0,1,2,..." />
        <input type="submit" value="更新" class="btn btn-warning" />
    </div>
</form>

<div>按下1,2,3,4可切換班別</div>
<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="normal-tab" data-bs-toggle="tab" data-bs-target="#normal" type="button" role="tab" aria-controls="normal" aria-selected="true">全</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="night-tab" data-bs-toggle="tab" data-bs-target="#night" type="button" role="tab" aria-controls="night" aria-selected="false">夜</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="morning-tab" data-bs-toggle="tab" data-bs-target="#morning" type="button" role="tab" aria-controls="morning" aria-selected="false">早</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="afternoon-tab" data-bs-toggle="tab" data-bs-target="#afternoon" type="button" role="tab" aria-controls="afternoon" aria-selected="false">中</button>
    </li>
</ul>
@{
    int i = 0;
}
<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="normal" role="tabpanel" aria-labelledby="normal-tab">
        <div class="container_schedule">
            @if (Model != null)
            {
                int date_i = 0;

                <div data-row="0" data-column="0" class="box box_first_column" onmouseover="highlightRowAndColumn(@i, @date_i)">@Model.dates[0].Month</div>


                date_i++;
                @foreach (DateTime date in Model.dates)
                {

                    <div data-row="0" data-column="@date_i" class="box box_first_row " onmouseover="highlightRowAndColumn(@i, @date_i)">@date.ToString("dd")</div>

                    date_i++;
                }
                i++;
                @foreach (dotnetcore_desktop_app.Models.ScheduleModel emp in Model.schedules)
                {
                    int j = 0;

                    <div data-row="@i" data-column="@j" class="box box_first_column" onmouseover="highlightRowAndColumn(@i, @j)">@emp.employee.CNAME_PBA0.Trim()</div>

                    j++;
                    foreach (var WorkShiftList in emp.WorkShiftList)
                    {
                        <div data-row="@i" data-column="@j" class="box" onmouseover="highlightRowAndColumn(@i, @j)">@WorkShiftList</div>
                        j++;
                    }
                    j = 1;
                    i++;
                }

            }
        </div>
    </div>
    <div class="tab-pane fade" id="night" role="tabpanel" aria-labelledby="night-tab">
        <div class="container_schedule">
            @if (Model != null)
            {
                int date_i = 0;

                <div data-row="@i" data-column="@date_i" class="box box_first_column " onmouseover="highlightRowAndColumn(@i, @date_i)">@Model.dates[0].Month</div>


                date_i++;
                @foreach (DateTime date in Model.dates)
                {

                    <div data-row="@i" data-column="@date_i" class="box box_first_row" onmouseover="highlightRowAndColumn(@i, @date_i)">@date.ToString("dd")</div>

                    date_i++;
                }


                i++;
                @foreach (dotnetcore_desktop_app.Models.ScheduleModel emp in Model.schedules)
                {
                    int j = 0;

                    <div data-row="@i" data-column="@j" class="box box_first_column" onmouseover="highlightRowAndColumn(@i, @j)">夜班</div>

                    j++;
                    foreach (var WorkShiftList in emp.WorkShiftList)
                    {
                        if (WorkShiftList == "01")
                        {
                            <div data-row="@i" data-column="@j" class="box" onmouseover="highlightRowAndColumn(@i, @j)">@emp.employee.CNAME_PBA0.Trim()</div>
                        }
                        else
                        {
                            <div data-row="@i" data-column="@j" class="box" onmouseover="highlightRowAndColumn(@i, @j)"></div>
                        }
                        j++;
                    }
                    j = 1;
                    i++;
                }
            }
        </div>
    </div>
    <div class="tab-pane fade" id="morning" role="tabpanel" aria-labelledby="morning-tab">
        <div class="container_schedule">
            @if (Model != null)
            {
                int date_i = 0;

                <div data-row="@i" data-column="@date_i" class="box box_first_column" onmouseover="highlightRowAndColumn(@i, @date_i)">@Model.dates[0].Month</div>


                date_i++;

                @foreach (DateTime date in Model.dates)
                {
                    <div data-row="@i" data-column="@date_i" class="box box_first_row " onmouseover="highlightRowAndColumn(@i, @date_i)">@date.ToString("dd")</div>
                    date_i++;
                }

                i++;
                @foreach (dotnetcore_desktop_app.Models.ScheduleModel emp in Model.schedules)
                {
                    int j = 0;
                    <div data-row="@i" data-column="@j" class="box box_first_column" onmouseover="highlightRowAndColumn(@i, @j)">早班</div>
                    j++;
                    foreach (var WorkShiftList in emp.WorkShiftList)
                    {
                        if (WorkShiftList == "02" || WorkShiftList == "11")
                        {
                            <div data-row="@i" data-column="@j" class="box" onmouseover="highlightRowAndColumn(@i, @j)">@emp.employee.CNAME_PBA0.Trim()</div>
                        }
                        else
                        {
                            <div data-row="@i" data-column="@j" class="box" onmouseover="highlightRowAndColumn(@i, @j)"></div>
                        }
                        j++;
                    }
                    j = 1;
                    i++;
                }
            }
        </div>
    </div>
    <div class="tab-pane fade" id="afternoon" role="tabpanel" aria-labelledby="afternoon-tab">
        <div class="container_schedule">
            @if (Model != null)
            {
                int date_i = 0;

                <div data-row="@i" data-column="@date_i" class="box box_first_column" onmouseover="highlightRowAndColumn(@i, @date_i)">@Model.dates[0].Month</div>



                date_i++;
                @foreach (DateTime date in Model.dates)
                {
                    <div data-row="@i" data-column="@date_i" class="box box_first_row" onmouseover="highlightRowAndColumn(@i, @date_i)">@date.ToString("dd")</div>
                    date_i++;
                }


                i++;
                @foreach (dotnetcore_desktop_app.Models.ScheduleModel emp in Model.schedules)
                {
                    int j = 0;
                    <div data-row="@i" data-column="@j" class="box box_first_column" onmouseover="highlightRowAndColumn(@i, @j)">中班</div>
                    j++;
                    foreach (var WorkShiftList in emp.WorkShiftList)
                    {
                        if (WorkShiftList == "03" || WorkShiftList == "45" || WorkShiftList == "75")
                        {
                            <div data-row="@i" data-column="@j" class="box" onmouseover="highlightRowAndColumn(@i, @j)">@emp.employee.CNAME_PBA0.Trim()</div>
                        }
                        else
                        {
                            <div data-row="@i" data-column="@j" class="box" onmouseover="highlightRowAndColumn(@i, @j)"></div>
                        }
                        j++;
                    }
                    j = 1;
                    i++;
                }
            }
        </div>
    </div>
</div>




<script>
    function highlightRowAndColumn(row, col) {
        const boxes = document.querySelectorAll('.box');

        for (let i = 0; i < boxes.length; i++) {
            const boxRow = Math.floor(i / @column_coumt);
            const boxCol = i % @column_coumt;

            if (boxRow === row || boxCol === col) {
                boxes[i].classList.add('highlight-row');
                boxes[i].classList.add('highlight-column');
            } else {
                boxes[i].classList.remove('highlight-row');
                boxes[i].classList.remove('highlight-column');
            }
        }
    }

    const boxes = document.querySelectorAll('.box');
    for (let i = 0; i < boxes.length; i++) {
        boxes[i].addEventListener('mouseout', () => {
            for (let j = 0; j < boxes.length; j++) {
                boxes[j].classList.remove('highlight-row');
                boxes[j].classList.remove('highlight-column');
            }
        });
    }
</script>
<script>
    document.addEventListener("keydown", function (event) {
        const keyCode = event.keyCode || event.which; // 兼容性处理

        switch (keyCode) {
            case 49: // 1 key
            case 97: // Numpad 1
                document.getElementById("normal-tab").click();
                break;
            case 50: // 2 key
            case 98: // Numpad 2
                document.getElementById("night-tab").click();
                break;
            case 51: // 3 key
            case 99: // Numpad 3
                document.getElementById("morning-tab").click();
                break;
            case 52: // 4 key
            case 100: // Numpad 4
                document.getElementById("afternoon-tab").click();
                break;
        }
    });
</script>
<script>
    let row_count = 0;
    if (boxes.length !== 0) {
        row_count = boxes.length / @column_coumt;
    }
    let emp_count = @emp_count;

    // function clearEmptyCell(row, column, bound) {
    //     const currentBox = document.querySelector(`.box[data-row="${row}"][data-column="${column}"]`);

    //     // 检查下方相邻的div
    //     for (let i = row + 1; i <= bound; i++) { // 假设最多有两行
    //         const nextBox = document.querySelector(`.box[data-row="${i}"][data-column="${column}"]`);
    //         if (nextBox && nextBox.textContent.trim() !== "") { // 检查是否非空
    //             currentBox.textContent = nextBox.textContent;
    //             break; // 停止搜索
    //         }
    //     }
    // }

    if (emp_count !== 0) {
        //column總共執行date_count次，對應該月天數
        for (let column = 1; column <= @date_count; column++) {

            //turn總共執行3輪，分別對應夜、早、中班
            for (let turn = 1; turn <= 3; turn++) {
                let l_bound = (emp_count + 1) * turn;           //每個turn的總列數就是總人數+標頭，這邊是跳過正常班的部分，從夜班開始處理
                let u_bound = emp_count * (turn + 1) + turn;    //每多一個turn就會多一個標頭

                //l_bound避開標頭，u_bound為 emp_count 人數
                for (let i = l_bound; i <= u_bound; i++) {
                    console.log(i);
                    let currentBox = document.querySelector(`.box[data-row="${i}"][data-column="${column}"]`);
                    if (currentBox.textContent.trim() == "") {

                        //j從目前比對的格子往下找文字，找到u_bound為止
                        for (let j = i + 1; j <= u_bound; j++) {
                            let nextBox = document.querySelector(`.box[data-row="${j}"][data-column="${column}"]`);
                            if (nextBox && nextBox.textContent.trim() !== "") {
                                currentBox.textContent = nextBox.textContent;
                                nextBox.textContent = "";
                                break; // 停止搜索
                            }
                        }
                    }
                }
            }
        }

        console.log('finding empty starting');

        var date_count = @date_count;
        var longest_column = [0, 0, 0];    //儲存最長的、有內容column
        //turn總共執行3輪，分別對應夜、早、中班
        for (let turn = 1; turn <= 3; turn++) {
            let l_bound = (emp_count + 1) * turn;           //每個turn的總列數就是總人數+標頭，這邊是跳過正常班的部分，從夜班開始處理
            let u_bound = emp_count * (turn + 1) + turn;    //每多一個turn就會多一個標頭
            for (let column = 1; column <= date_count; column++) {
                console.log('**********************************');
                console.log('searching new column =   ' + column);
                //l_bound避開標頭，u_bound為 emp_count 人數
                for (let i = l_bound + 1; i <= u_bound; i++) {
                    let currentBox = document.querySelector(`.box[data-row="${i}"][data-column="${column}"]`);
                    console.log('second ' + i);
                    console.log('text =  ' + currentBox.textContent.trim());
                    if (currentBox.textContent.trim() == "" & i >= longest_column[turn - 1]) {
                        longest_column[turn - 1] = i;
                        console.log('longest_column [' + (turn - 1) + '] =  ' + i);
                        break; // 停止搜索
                    }
                }
            }
        }


        console.log('deleting div starting');

        for (let turn = 1; turn <= 3; turn++) {
            let l_bound = (emp_count + 1) * turn;           //每個turn的總列數就是總人數+標頭，這邊是跳過正常班的部分，從夜班開始處理
            let u_bound = emp_count * (turn + 1) + turn;    //每多一個turn就會多一個標頭
            for (let column = 0; column <= date_count; column++) {
                console.log('**********************************');
                console.log('searching new column =   ' + column);

                //l_bound避開標頭，u_bound為 emp_count 人數
                for (let i = longest_column[turn - 1]; i <= u_bound; i++) {
                    // 找到要移除的元素
                    var currentBox = document.querySelector(`.box[data-row="${i}"][data-column="${column}"]`);

                    // 找到父元素并从中移除currentBox元素
                    var parentElement = currentBox.parentNode;
                    parentElement.removeChild(currentBox);
                }
            }
        }

    }
</script>